{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2019-08-06T15:03:58.326Z",
    "end": "2019-08-06T15:04:06.656Z",
    "duration": 8330,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "cc6e9892-de5a-4183-bc73-ae6879d9c9b3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29018395-6ed6-4899-b275-1fd303df2103",
          "title": "Testing of EA App",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Performing Benefit Check",
              "fullTitle": "Testing of EA App Performing Benefit Check",
              "timedOut": null,
              "duration": 8280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// . for for class, this is included now in the custom command cy.login\n//cy.get(\".btn\").click({force:true});\n//cy.percySnapshot();\n//Click the employee list\ncy.contains(\"Employee List\").click(); //Table, > symbol is to identify within the tr\n//cy.get('.table').find('tr > td');\n//Get the click for specific row where it contains 'Prashant' the the parent\n//  contains benefits\ncy.get('.table').find('tr').contains('Prashant').parent().contains('Benefits').click(); //Alias for rows and using wrapping\ncy.get('.table').find('tr').as(\"rows\");\ncy.get(\"@rows\").then(function ($row) {\n  cy.wrap($row).click({\n    multiple: true\n  });\n}); //verify the value from a property from a JSON file {name:'Karthik'}\n//  this is not part of this web test, this is to make a point regarding\n//  how to validate json files\ncy.wrap({\n  name: 'Karthik'\n}).should('have.property', 'name').and('eq', 'Karthik'); //cy.percySnapshot(\"after\");\n//using wrap\n// cy.get('.table').find('tr > td').then(($td) => {\n//     //with this wrap we are taking all the tds, then call the invoke which is a \n//     //  shorthand for the invoke\n//     cy.wrap($td).contains(\"John\").invoke(\"wrap\").parent().contains(\"Benefits\").click();\n// })",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<input#UserName.form-control>' to be 'focused'\n\nBecause this error occurred during a 'before all' hook we are skipping the remaining tests in the current suite: 'Testing of EA App'",
                "estack": "CypressError: Timed out retrying: expected '<input#UserName.form-control>' to be 'focused'\n\nBecause this error occurred during a 'before all' hook we are skipping the remaining tests in the current suite: 'Testing of EA App'\n    at Object.cypressErr (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:83220:11)\n    at Object.throwErr (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:83185:18)\n    at Object.throwErrByPath (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:83212:17)\n    at retry (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:76640:16)\n    at http://eaapp.somee.com/__cypress/runner/cypress_runner.js:68612:18\n    at tryCatcher (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:132142:23)\n    at Promise._settlePromiseFromHandler (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:130160:31)\n    at Promise._settlePromise (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:130217:18)\n    at Promise._settlePromise0 (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:130262:10)\n    at Promise._settlePromises (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:130337:18)\n    at Async._drainQueue (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:127066:16)\n    at Async._drainQueues (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:127076:10)\n    at Async.drainQueues (http://eaapp.somee.com/__cypress/runner/cypress_runner.js:126950:14)",
                "diff": null
              },
              "uuid": "ccf13c7c-1648-4568-9c32-372507c31514",
              "parentUUID": "29018395-6ed6-4899-b275-1fd303df2103",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ccf13c7c-1648-4568-9c32-372507c31514"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8280,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.1.4"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "useInlineDiffs": false
      },
      "version": "4.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "4.0.0"
    }
  }
}